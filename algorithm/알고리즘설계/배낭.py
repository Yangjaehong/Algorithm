def bag(n,k,val):
    d = [[0]*(k+1) for _ in range(n+1)] #d배열 0으로 초기화
    for i in range(1, n+1):
        for j in range(1, k+1):
            w = val[i][0] #리스트의 무게를 w에 대입
            v = val[i][1] #리스트의 가치를 v에 대입

            if j < w:
                d[i][j] = d[i-1][j]
            else:
                d[i][j] = max(d[i-1][j], d[i-1][j-w]+v)
                #현재 넣을 물건의 무게만큼 빼고 현재 물건을 넣는다
                #물건을 넣지않고 이전것을 그대로 사용한다
                
    return d[n][k] #최종 결과 리턴
    
#처음에 i-1에 접근하기 위해 때문에 첫번 째를 임의로 [0,0]으로 설정 함 
val1 = [[0, 0], [5, 5], [10, 7], [7, 10], [3, 6], [4, 8], [11, 20]] #입력 1

#처음에 i-1에 접근하기 위해 때문에 첫번 째를 임의로 [0,0]으로 설정 함 
val2 = [[0, 0], [3, 5], [7, 7], [8, 10], [5, 6], [6, 8], [13, 20], [11,18], [2,5]] #입력 2



n = len(val1) - 1 #총 변수들의 개수
k = 15 #배낭의 용량
print(f'입력 1에 대하여 가방에 담은 보석의 최대 가치: {bag(n,k,val1)}') #return 값 출력

n = len(val2) - 1 #총 변수들의 개수
k = 30 #배낭의 용량
print(f'입력 2에 대하여 가방에 담은 보석의 최대 가치: {bag(n,k,val2)}') #return 값 출력
